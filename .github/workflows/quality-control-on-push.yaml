# Parallel implementation of the steps defined in quality-control.rs.

name: QC

on:
  push:
    branches:
      - '**'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install minimal nightly Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        components: rustfmt, clippy

    - run: cargo +nightly --locked fmt --all -- --check
    - run: cargo +nightly --locked clippy --workspace --all-targets --all-features -- -Dwarnings

  test_on_linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install minimal stable Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable

    # Use individual steps so we get a nice overview in the GitHub UI.
    - run: cargo --locked build --workspace
    - run: cargo --locked test  --workspace
    - run: cargo --locked build --workspace --release
    - run: cargo --locked test  --workspace --release
    #- run: cargo +nightly --locked miri test --workspace
    #- run: cargo +nightly --locked miri test --workspace --release

  test_on_mac:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install minimal stable Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable

    # Use individual steps so we get a nice overview in the GitHub UI.
    - run: cargo --locked build --workspace
    - run: cargo --locked test  --workspace
    - run: cargo --locked build --workspace --release
    - run: cargo --locked test  --workspace --release
    #- run: cargo +nightly --locked miri test --workspace
    #- run: cargo +nightly --locked miri test --workspace --release

  test_on_windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install minimal stable Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable

    # Use individual steps so we get a nice overview in the GitHub UI.
    - run: cargo --locked build --workspace
    - run: cargo --locked test  --workspace
    - run: cargo --locked build --workspace --release
    - run: cargo --locked test  --workspace --release
    #- run: cargo +nightly --locked miri test --workspace
    #- run: cargo +nightly --locked miri test --workspace --release
